@use 'sass:map';

@mixin for-phone-only {
  @media (max-width: 599px) {
    @content;
  }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 600px) {
    @content;
  }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 900px) {
    @content;
  }
}
@mixin for-desktop-up {
  @media (min-width: 1200px) {
    @content;
  }
}
@mixin for-big-desktop-up {
  @media (min-width: 1800px) {
    @content;
  }
}

@mixin add-ellipsis($lines: 1) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  line-clamp: $lines;
  -moz-box-orient: vertical;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  overflow: hidden;
  padding: 0 !important;
}

@mixin show-description {
  display: block;
  color: var(--color-text-200);
}

@mixin description($lines: 1) {
  @include add-ellipsis($lines);
  @include on-non-hoverable-devices {
    &:focus,
    &:focus-within {
      @include show-description;
    }
  }

  @include on-hoverable-devices {
    &:hover {
      @include show-description;
    }
  }
}

@mixin on-hoverable-devices {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

@mixin on-non-hoverable-devices {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin mouse-effects($hover, $active, $change) {
  $things-to-change: (
    txt: 'color',
    bg: 'background-color',
  );
  @include on-hoverable-devices {
    &:hover,
    &:focus {
      @if ($hover == 'underline') {
        text-decoration: underline;
      } @else {
        #{map.get($things-to-change, $change)}: $hover;
      }
    }
  }
  &:active {
    @if ($active == 'underline') {
      text-decoration: underline;
    } @else {
      #{map.get($things-to-change, $change)}: $active;
    }
  }
}

@mixin image-with-aspect-ratio {
  position: relative;
  height: min-content;
  padding: 0;
  overflow: hidden;
  &:after {
    content: '';
    display: block;
    padding-top: calc(100% / var(--image-aspect-ratio));
  }

  img,
  span {
    position: absolute;
    display: block;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
  }
}

@mixin circle($size: 1rem) {
  width: $size;
  height: $size;
  line-height: $size;
  text-align: center;
  border-radius: calc(#{$size} / 2);
}

@mixin zoom-image {
  &:hover,
  &:focus-within {
    & img {
      transform: scale(1.05) rotateZ(-1deg);
    }
  }
}

@mixin image-fade-in {
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  & img {
    animation: fade-in 0.2s forwards;
  }
}

@mixin card-image {
  @include image-with-aspect-ratio;
  @include zoom-image;
  @include image-fade-in;
  img {
    transition: 0.1s all ease-in-out;
  }
}

@mixin rank($top: auto, $right: auto, $bottom: auto, $left: auto, $size: 1) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  z-index: 999;
  @include circle($size);
}

@mixin padding-on-scroll-element($padding: var(--space-400), $row: false) {
  @if $row {
    padding-left: $padding;
    padding-right: 0;
    &:after {
      content: '';
      height: 0.01px;
      padding-left: $padding;
    }
  } @else {
    padding-top: $padding;
    padding-bottom: 0;
    &:after {
      content: '';
      display: block;
      padding-top: $padding;
    }
  }
}
