@use '../../../css/config.scss' as *;
.container {
  --play-btn-size: 2.75rem;

  position: relative;
  background: var(--color-foreground-50);

  @include mq(below, md) {
    & > *:not(.banner) {
      @include padding-horizontal(var(--space-400));
    }
  }

  @include mq(above, md) {
    padding-bottom: var(--space-200);
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  &.noBanner {
    padding-top: var(--space-600);

    .banner {
      display: none;
    }

    .imageContainer {
      margin-top: 0;
    }

    .description {
      flex: 1;

      & > p {
        display: block;
        overflow-y: auto;
        height: 100%;
      }
    }
  }

  .banner {
    position: relative;
    width: 100vw;
    height: calc(2 * var(--image-width));
    background-image: var(--banner-image);
    background-repeat: no-repeat;
    background-attachment: scroll;
    background-position: center;
    background-size: cover;
    overflow: hidden;

    @include mq(above, md) {
      height: 40vh;
      background-attachment: fixed;
      background-size: auto;
      background-position: top;
    }

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: linear-gradient(
        180deg,
        rgba(19, 19, 19, 0) 40%,
        rgba(19, 19, 19, 0.55)
      );
    }
  }

  .contents {
    max-width: 1069px;

    @include mq(above, md) {
      width: 100%;
      display: grid;
      grid-template-columns: min-content 1fr;
      grid-template-rows: 1fr auto;
      column-gap: var(--space-600);
      padding-top: var(--space-400);

      & > *:last-child {
        grid-column: 2/-1;
      }
    }
  }

  .imageContainer {
    margin-top: calc(
      var(--play-btn-size) + var(--space-500) -
        (var(--image-width) / var(--image-aspect-ratio))
    );
    display: grid;
    grid-template-columns: var(--image-width) 1fr;
    column-gap: var(--space-400);
    align-items: flex-end;
    z-index: 999;

    @include mq(above, md) {
      margin-top: -9rem;
      width: min-content;
      grid-template-columns: var(--image-width);
      align-content: flex-end;
      row-gap: var(--space-400);
    }

    .cover {
      width: 100%;
      @include aspect-ratio(var(--image-aspect-ratio));
      border-radius: 0.2em;
    }

    .button {
      display: flex;
      align-items: center;
      justify-content: center;
      background: var(--primary-500);
      box-shadow: 0 0.05em 0.025em 0.025em var(--color-shadow);
      width: 100%;
      height: var(--play-btn-size);
      border-radius: 0.25em;
      @include mouse-effects(var(--primary-600), var(--primary-400), bg);

      &:active {
        transform: scale(0.98);
      }

      .text {
        color: var(--white-600);
        margin-right: var(--space-200);
      }

      svg {
        fill: var(--white-600);
      }

      @include mq(above, md) {
        max-width: var(--image-width);
      }
    }
  }

  .details {
    display: flex;
    flex-direction: column;
  }

  .title {
    font-size: var(--text-size-600);
    font-weight: 700;
    line-height: 1.5;
    margin: var(--space-500) 0;

    @include mq(above, md) {
      margin: 0;
    }
  }

  .subTitle {
    @include mq(above, lg) {
      display: none;
    }
  }

  .description {
    --padding: var(--space-500);
    --lines: 9;
    --line-height: 1.8;

    @include mq(above, md) {
      --lines: 6;
    }

    background: var(--color-foreground-100);
    padding: var(--padding);
    margin-top: var(--space-400);
    height: calc(
      var(--line-height) * var(--lines) * 1em + (2 * var(--padding))
    );
    overflow-y: auto;

    & > p {
      @include description(var(--lines));
      line-height: var(--line-height);
    }
  }
}
